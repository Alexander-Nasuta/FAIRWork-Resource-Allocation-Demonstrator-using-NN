# coding: utf-8

"""
    Api Documentation

    Api Documentation  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class BaselineInfo(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'created_by_user': 'UserInfo',
        'creation_date': 'str',
        'description': 'str',
        'id': 'str',
        'in_bkdn_version': 'str',
        'related_milestone': 'MilestoneInfo',
        'root_bkdn_elem': 'BreakdownElementInfo'
    }

    attribute_map = {
        'created_by_user': 'created_by_user',
        'creation_date': 'creation_date',
        'description': 'description',
        'id': 'id',
        'in_bkdn_version': 'in_bkdn_version',
        'related_milestone': 'related_milestone',
        'root_bkdn_elem': 'root_bkdn_elem'
    }

    def __init__(self, created_by_user=None, creation_date=None, description=None, id=None, in_bkdn_version=None, related_milestone=None, root_bkdn_elem=None):  # noqa: E501
        """BaselineInfo - a model defined in Swagger"""  # noqa: E501
        self._created_by_user = None
        self._creation_date = None
        self._description = None
        self._id = None
        self._in_bkdn_version = None
        self._related_milestone = None
        self._root_bkdn_elem = None
        self.discriminator = None
        if created_by_user is not None:
            self.created_by_user = created_by_user
        if creation_date is not None:
            self.creation_date = creation_date
        if description is not None:
            self.description = description
        if id is not None:
            self.id = id
        if in_bkdn_version is not None:
            self.in_bkdn_version = in_bkdn_version
        if related_milestone is not None:
            self.related_milestone = related_milestone
        if root_bkdn_elem is not None:
            self.root_bkdn_elem = root_bkdn_elem

    @property
    def created_by_user(self):
        """Gets the created_by_user of this BaselineInfo.  # noqa: E501


        :return: The created_by_user of this BaselineInfo.  # noqa: E501
        :rtype: UserInfo
        """
        return self._created_by_user

    @created_by_user.setter
    def created_by_user(self, created_by_user):
        """Sets the created_by_user of this BaselineInfo.


        :param created_by_user: The created_by_user of this BaselineInfo.  # noqa: E501
        :type: UserInfo
        """

        self._created_by_user = created_by_user

    @property
    def creation_date(self):
        """Gets the creation_date of this BaselineInfo.  # noqa: E501


        :return: The creation_date of this BaselineInfo.  # noqa: E501
        :rtype: str
        """
        return self._creation_date

    @creation_date.setter
    def creation_date(self, creation_date):
        """Sets the creation_date of this BaselineInfo.


        :param creation_date: The creation_date of this BaselineInfo.  # noqa: E501
        :type: str
        """

        self._creation_date = creation_date

    @property
    def description(self):
        """Gets the description of this BaselineInfo.  # noqa: E501


        :return: The description of this BaselineInfo.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this BaselineInfo.


        :param description: The description of this BaselineInfo.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def id(self):
        """Gets the id of this BaselineInfo.  # noqa: E501


        :return: The id of this BaselineInfo.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this BaselineInfo.


        :param id: The id of this BaselineInfo.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def in_bkdn_version(self):
        """Gets the in_bkdn_version of this BaselineInfo.  # noqa: E501


        :return: The in_bkdn_version of this BaselineInfo.  # noqa: E501
        :rtype: str
        """
        return self._in_bkdn_version

    @in_bkdn_version.setter
    def in_bkdn_version(self, in_bkdn_version):
        """Sets the in_bkdn_version of this BaselineInfo.


        :param in_bkdn_version: The in_bkdn_version of this BaselineInfo.  # noqa: E501
        :type: str
        """

        self._in_bkdn_version = in_bkdn_version

    @property
    def related_milestone(self):
        """Gets the related_milestone of this BaselineInfo.  # noqa: E501


        :return: The related_milestone of this BaselineInfo.  # noqa: E501
        :rtype: MilestoneInfo
        """
        return self._related_milestone

    @related_milestone.setter
    def related_milestone(self, related_milestone):
        """Sets the related_milestone of this BaselineInfo.


        :param related_milestone: The related_milestone of this BaselineInfo.  # noqa: E501
        :type: MilestoneInfo
        """

        self._related_milestone = related_milestone

    @property
    def root_bkdn_elem(self):
        """Gets the root_bkdn_elem of this BaselineInfo.  # noqa: E501


        :return: The root_bkdn_elem of this BaselineInfo.  # noqa: E501
        :rtype: BreakdownElementInfo
        """
        return self._root_bkdn_elem

    @root_bkdn_elem.setter
    def root_bkdn_elem(self, root_bkdn_elem):
        """Sets the root_bkdn_elem of this BaselineInfo.


        :param root_bkdn_elem: The root_bkdn_elem of this BaselineInfo.  # noqa: E501
        :type: BreakdownElementInfo
        """

        self._root_bkdn_elem = root_bkdn_elem

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(BaselineInfo, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, BaselineInfo):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
