# coding: utf-8

"""
    Api Documentation

    Api Documentation  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class DataFileSearchResultInfoEx(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'doc_info': 'DataFileInfo',
        'tree_path_to_element': 'list[int]'
    }

    attribute_map = {
        'doc_info': 'doc_info',
        'tree_path_to_element': 'tree_path_to_element'
    }

    def __init__(self, doc_info=None, tree_path_to_element=None):  # noqa: E501
        """DataFileSearchResultInfoEx - a model defined in Swagger"""  # noqa: E501
        self._doc_info = None
        self._tree_path_to_element = None
        self.discriminator = None
        if doc_info is not None:
            self.doc_info = doc_info
        if tree_path_to_element is not None:
            self.tree_path_to_element = tree_path_to_element

    @property
    def doc_info(self):
        """Gets the doc_info of this DataFileSearchResultInfoEx.  # noqa: E501


        :return: The doc_info of this DataFileSearchResultInfoEx.  # noqa: E501
        :rtype: DataFileInfo
        """
        return self._doc_info

    @doc_info.setter
    def doc_info(self, doc_info):
        """Sets the doc_info of this DataFileSearchResultInfoEx.


        :param doc_info: The doc_info of this DataFileSearchResultInfoEx.  # noqa: E501
        :type: DataFileInfo
        """

        self._doc_info = doc_info

    @property
    def tree_path_to_element(self):
        """Gets the tree_path_to_element of this DataFileSearchResultInfoEx.  # noqa: E501


        :return: The tree_path_to_element of this DataFileSearchResultInfoEx.  # noqa: E501
        :rtype: list[int]
        """
        return self._tree_path_to_element

    @tree_path_to_element.setter
    def tree_path_to_element(self, tree_path_to_element):
        """Sets the tree_path_to_element of this DataFileSearchResultInfoEx.


        :param tree_path_to_element: The tree_path_to_element of this DataFileSearchResultInfoEx.  # noqa: E501
        :type: list[int]
        """

        self._tree_path_to_element = tree_path_to_element

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(DataFileSearchResultInfoEx, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DataFileSearchResultInfoEx):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
