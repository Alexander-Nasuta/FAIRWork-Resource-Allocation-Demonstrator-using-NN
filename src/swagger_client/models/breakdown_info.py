# coding: utf-8

"""
    Api Documentation

    Api Documentation  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class BreakdownInfo(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'created_by_user': 'str',
        'creation_date': 'str',
        'description': 'str',
        'favorite_breakdown_elements': 'list[FavoriteBreakdownElementInfo]',
        'id': 'str',
        'is_current_version': 'bool',
        'is_partial_baseline': 'bool',
        'loaded_baseline': 'BaselineInfo',
        'notifications': 'list[NotificationInfo]',
        'root_bkdn_elem': 'BreakdownElementInfo',
        'services_version': 'str',
        'subdomains': 'list[SubdomainInfo]'
    }

    attribute_map = {
        'created_by_user': 'created_by_user',
        'creation_date': 'creation_date',
        'description': 'description',
        'favorite_breakdown_elements': 'favorite_breakdown_elements',
        'id': 'id',
        'is_current_version': 'is_current_version',
        'is_partial_baseline': 'is_partial_baseline',
        'loaded_baseline': 'loaded_baseline',
        'notifications': 'notifications',
        'root_bkdn_elem': 'root_bkdn_elem',
        'services_version': 'services_version',
        'subdomains': 'subdomains'
    }

    def __init__(self, created_by_user=None, creation_date=None, description=None, favorite_breakdown_elements=None, id=None, is_current_version=None, is_partial_baseline=None, loaded_baseline=None, notifications=None, root_bkdn_elem=None, services_version=None, subdomains=None):  # noqa: E501
        """BreakdownInfo - a model defined in Swagger"""  # noqa: E501
        self._created_by_user = None
        self._creation_date = None
        self._description = None
        self._favorite_breakdown_elements = None
        self._id = None
        self._is_current_version = None
        self._is_partial_baseline = None
        self._loaded_baseline = None
        self._notifications = None
        self._root_bkdn_elem = None
        self._services_version = None
        self._subdomains = None
        self.discriminator = None
        if created_by_user is not None:
            self.created_by_user = created_by_user
        if creation_date is not None:
            self.creation_date = creation_date
        if description is not None:
            self.description = description
        if favorite_breakdown_elements is not None:
            self.favorite_breakdown_elements = favorite_breakdown_elements
        if id is not None:
            self.id = id
        if is_current_version is not None:
            self.is_current_version = is_current_version
        if is_partial_baseline is not None:
            self.is_partial_baseline = is_partial_baseline
        if loaded_baseline is not None:
            self.loaded_baseline = loaded_baseline
        if notifications is not None:
            self.notifications = notifications
        if root_bkdn_elem is not None:
            self.root_bkdn_elem = root_bkdn_elem
        if services_version is not None:
            self.services_version = services_version
        if subdomains is not None:
            self.subdomains = subdomains

    @property
    def created_by_user(self):
        """Gets the created_by_user of this BreakdownInfo.  # noqa: E501


        :return: The created_by_user of this BreakdownInfo.  # noqa: E501
        :rtype: str
        """
        return self._created_by_user

    @created_by_user.setter
    def created_by_user(self, created_by_user):
        """Sets the created_by_user of this BreakdownInfo.


        :param created_by_user: The created_by_user of this BreakdownInfo.  # noqa: E501
        :type: str
        """

        self._created_by_user = created_by_user

    @property
    def creation_date(self):
        """Gets the creation_date of this BreakdownInfo.  # noqa: E501


        :return: The creation_date of this BreakdownInfo.  # noqa: E501
        :rtype: str
        """
        return self._creation_date

    @creation_date.setter
    def creation_date(self, creation_date):
        """Sets the creation_date of this BreakdownInfo.


        :param creation_date: The creation_date of this BreakdownInfo.  # noqa: E501
        :type: str
        """

        self._creation_date = creation_date

    @property
    def description(self):
        """Gets the description of this BreakdownInfo.  # noqa: E501


        :return: The description of this BreakdownInfo.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this BreakdownInfo.


        :param description: The description of this BreakdownInfo.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def favorite_breakdown_elements(self):
        """Gets the favorite_breakdown_elements of this BreakdownInfo.  # noqa: E501


        :return: The favorite_breakdown_elements of this BreakdownInfo.  # noqa: E501
        :rtype: list[FavoriteBreakdownElementInfo]
        """
        return self._favorite_breakdown_elements

    @favorite_breakdown_elements.setter
    def favorite_breakdown_elements(self, favorite_breakdown_elements):
        """Sets the favorite_breakdown_elements of this BreakdownInfo.


        :param favorite_breakdown_elements: The favorite_breakdown_elements of this BreakdownInfo.  # noqa: E501
        :type: list[FavoriteBreakdownElementInfo]
        """

        self._favorite_breakdown_elements = favorite_breakdown_elements

    @property
    def id(self):
        """Gets the id of this BreakdownInfo.  # noqa: E501


        :return: The id of this BreakdownInfo.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this BreakdownInfo.


        :param id: The id of this BreakdownInfo.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def is_current_version(self):
        """Gets the is_current_version of this BreakdownInfo.  # noqa: E501


        :return: The is_current_version of this BreakdownInfo.  # noqa: E501
        :rtype: bool
        """
        return self._is_current_version

    @is_current_version.setter
    def is_current_version(self, is_current_version):
        """Sets the is_current_version of this BreakdownInfo.


        :param is_current_version: The is_current_version of this BreakdownInfo.  # noqa: E501
        :type: bool
        """

        self._is_current_version = is_current_version

    @property
    def is_partial_baseline(self):
        """Gets the is_partial_baseline of this BreakdownInfo.  # noqa: E501


        :return: The is_partial_baseline of this BreakdownInfo.  # noqa: E501
        :rtype: bool
        """
        return self._is_partial_baseline

    @is_partial_baseline.setter
    def is_partial_baseline(self, is_partial_baseline):
        """Sets the is_partial_baseline of this BreakdownInfo.


        :param is_partial_baseline: The is_partial_baseline of this BreakdownInfo.  # noqa: E501
        :type: bool
        """

        self._is_partial_baseline = is_partial_baseline

    @property
    def loaded_baseline(self):
        """Gets the loaded_baseline of this BreakdownInfo.  # noqa: E501


        :return: The loaded_baseline of this BreakdownInfo.  # noqa: E501
        :rtype: BaselineInfo
        """
        return self._loaded_baseline

    @loaded_baseline.setter
    def loaded_baseline(self, loaded_baseline):
        """Sets the loaded_baseline of this BreakdownInfo.


        :param loaded_baseline: The loaded_baseline of this BreakdownInfo.  # noqa: E501
        :type: BaselineInfo
        """

        self._loaded_baseline = loaded_baseline

    @property
    def notifications(self):
        """Gets the notifications of this BreakdownInfo.  # noqa: E501


        :return: The notifications of this BreakdownInfo.  # noqa: E501
        :rtype: list[NotificationInfo]
        """
        return self._notifications

    @notifications.setter
    def notifications(self, notifications):
        """Sets the notifications of this BreakdownInfo.


        :param notifications: The notifications of this BreakdownInfo.  # noqa: E501
        :type: list[NotificationInfo]
        """

        self._notifications = notifications

    @property
    def root_bkdn_elem(self):
        """Gets the root_bkdn_elem of this BreakdownInfo.  # noqa: E501


        :return: The root_bkdn_elem of this BreakdownInfo.  # noqa: E501
        :rtype: BreakdownElementInfo
        """
        return self._root_bkdn_elem

    @root_bkdn_elem.setter
    def root_bkdn_elem(self, root_bkdn_elem):
        """Sets the root_bkdn_elem of this BreakdownInfo.


        :param root_bkdn_elem: The root_bkdn_elem of this BreakdownInfo.  # noqa: E501
        :type: BreakdownElementInfo
        """

        self._root_bkdn_elem = root_bkdn_elem

    @property
    def services_version(self):
        """Gets the services_version of this BreakdownInfo.  # noqa: E501


        :return: The services_version of this BreakdownInfo.  # noqa: E501
        :rtype: str
        """
        return self._services_version

    @services_version.setter
    def services_version(self, services_version):
        """Sets the services_version of this BreakdownInfo.


        :param services_version: The services_version of this BreakdownInfo.  # noqa: E501
        :type: str
        """

        self._services_version = services_version

    @property
    def subdomains(self):
        """Gets the subdomains of this BreakdownInfo.  # noqa: E501


        :return: The subdomains of this BreakdownInfo.  # noqa: E501
        :rtype: list[SubdomainInfo]
        """
        return self._subdomains

    @subdomains.setter
    def subdomains(self, subdomains):
        """Sets the subdomains of this BreakdownInfo.


        :param subdomains: The subdomains of this BreakdownInfo.  # noqa: E501
        :type: list[SubdomainInfo]
        """

        self._subdomains = subdomains

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(BreakdownInfo, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, BreakdownInfo):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
